trigger:
  branches:
    include:
      - main

variables:
  containerAppName: blue-green-app
  resourceGroup: RG-Devansh-POC
  location: Canada Central
  demoImage: azurespringapp.azurecr.io/bluegreen/page2:latest
  revisionSuffix: green-$(Build.BuildId)
  azureSub: RG-Devansh-POC-0041

stages:
- stage: DeployGreen
  jobs:
  - job: DeployGreenRevision
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: ${{ variables.azureSub }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Deploying new Green revision..."
          az containerapp update \
            --name ${{ variables.containerAppName }} \
            --resource-group ${{ variables.resourceGroup }} \
            --image ${{ variables.demoImage }} \
            --revision-suffix ${{ variables.revisionSuffix }}
           az containerapp revision label add \
                  --name $(containerAppName) \
                  --resource-group $(resourceGroup) \
                  --revision ${{ variables.containerAppName }}-$(Build.BuildId) \
                  --label green
      

- stage: Validate
  dependsOn: DeployGreen
  jobs:
  - job: SmokeTest
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "Smoke testing Green revision..."
        # Optionally curl using known URL with revision header/query param if enabled
        echo "Test passed."

- stage: SwitchTraffic
  dependsOn: Validate
  jobs:
  - job: Set100PercentToGreen
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: ${{ variables.azureSub }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          greenRev=$(az containerapp revision list \
            --name ${{ variables.containerAppName }} \
            --resource-group ${{ variables.resourceGroup }} \
            --query "[?contains(name, '${{ variables.revisionSuffix }}')].name" \
            -o tsv)

          echo "Shifting 100% traffic to revision: $greenRev"

          az containerapp ingress traffic set \
            --name ${{ variables.containerAppName }} \
            --resource-group ${{ variables.resourceGroup }} \
            --revision-weight $greenRev=100

- stage: Cleanup
  dependsOn: SwitchTraffic
  jobs:
  - job: DeactivateNonGreenRevisions
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: ${{ variables.azureSub }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Getting all revisions with traffic..."
          trafficRevs=$(az containerapp show \
            --name ${{ variables.containerAppName }} \
            --resource-group ${{ variables.resourceGroup }} \
            --query "properties.configuration.ingress.traffic[?weight > \`0\`].revisionName" \
            -o tsv)

          for rev in $trafficRevs; do
            echo "Checking labels for revision: $rev"

            label=$(az containerapp revision show \
              --name ${{ variables.containerAppName }} \
              --resource-group ${{ variables.resourceGroup }} \
              --revision $rev \
              --query "tags.app" \
              -o tsv)

            if [[ "$label" != "green" ]]; then
              echo "Revision $rev is not labeled green. Deactivating..."
              az containerapp revision deactivate \
                --name ${{ variables.containerAppName }} \
                --resource-group ${{ variables.resourceGroup }} \
                --revision $rev
            else
              echo "Revision $rev is labeled green. Keeping active."
            fi
          done
