trigger: none

resources:
  pipelines:
    - pipeline: warBuildPipeline          # Local alias for the WAR build pipeline
      source: 'devansha-optimus.spring-petclinic-buildwar'  # Exact pipeline name without (ID)
      trigger: true                      # Enable automatic trigger after this pipeline completes

variables:
  ACR_NAME: azurespringapp
  ACR_LOGIN_SERVER: azurespringapp.azurecr.io
  IMAGE_NAME: springboot-app
  BUILDER: azurespringapp.azurecr.io/azure-spring-builder:latest
  AZURE_SERVICE_CONNECTION: 'RG-Devansh-POC-0041'

pool:
  vmImage: ubuntu-latest

steps:
  - checkout: none   # No need to checkout repo code in this pipeline

  - task: DownloadPipelineArtifact@2
    inputs:
      project: 'AGF-POC'       # e.g. 'devansha-optimus' or whatever your project is named
      buildType: 'specific'
      pipeline: $(resources.pipeline.warBuildPipeline.pipelineId)
      buildVersionToDownload: 'specific'
      buildId: $(resources.pipeline.warBuildPipeline.runId)
      artifact: 'springboot-war'
      targetPath: '$(Pipeline.Workspace)/war-artifact'

  - script: |
      echo "Installing pack CLI..."
      curl -sSL "https://github.com/buildpacks/pack/releases/latest/download/pack-linux.tgz" | tar -xz
      sudo mv pack /usr/local/bin/
    displayName: 'Install pack CLI'

  - task: AzureCLI@2
    displayName: 'Login to Azure Container Registry'
    inputs:
      azureSubscription: $(AZURE_SERVICE_CONNECTION)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az acr login --name $ACR_NAME
    env:
      ACR_NAME: $(ACR_NAME)

  - script: |
      WAR_FILE=$(find $(Pipeline.Workspace)/war-artifact -name "*.war" | head -n 1)
      echo "WAR file located at: $WAR_FILE"
      
      pack build $ACR_LOGIN_SERVER/$IMAGE_NAME:$(Build.BuildId) \
        --path $WAR_FILE \
        --builder $BUILDER \
        --publish

      docker tag $ACR_LOGIN_SERVER/$IMAGE_NAME:$(Build.BuildId) $ACR_LOGIN_SERVER/$IMAGE_NAME:latest
      docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:latest
    displayName: 'Build and Push OCI Image'
    env:
      ACR_LOGIN_SERVER: $(ACR_LOGIN_SERVER)
      IMAGE_NAME: $(IMAGE_NAME)
      BUILDER: $(BUILDER)
