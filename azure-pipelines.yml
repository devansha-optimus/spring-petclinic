trigger:
  branches:
    include:
      - main

variables:
  containerAppName: blue-green-app
  resourceGroup: RG-Devansh-POC
  location: Canada Central
  demoImage: azurespringapp.azurecr.io/bluegreen/page2:latest
  azureSub: RG-Devansh-POC-0041

stages:
- stage: DeployRevision
  jobs:
  - job: DeployNewRevision
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSub)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          oldLabel=$(az containerapp revision label list \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --query "[?label=='blue' || label=='green'] | [0].label" -o tsv)

          echo "Current label in use: $oldLabel"

          if [ "$oldLabel" == "green" ]; then
            newLabel="blue"
          elif [ "$oldLabel" == "blue" ]; then
            newLabel="green"
          else
            newLabel="green"
          fi

          echo "New label to deploy: $newLabel"

          revisionSuffix="${newLabel}-${BUILD_BUILDID}"
          echo "Deploying revision with suffix: $revisionSuffix"

          az containerapp update \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --image $(demoImage) \
            --revision-suffix $revisionSuffix

          az containerapp revision label add \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --revision $(containerAppName)--$revisionSuffix \
            --label $newLabel

          echo "##vso[task.setvariable variable=newLabel]$newLabel"
          echo "##vso[task.setvariable variable=revisionSuffix]$revisionSuffix"




- stage: SmokeTest
  dependsOn: DeployRevision
  jobs:
  - job: RunSmokeTests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "Running smoke tests..."
        # Add curl or integration checks here
        echo "Smoke tests passed."

- stage: Route100Percent
  dependsOn: SmokeTest
  jobs:
  - job: FinalShift
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSub)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          newRev=$(az containerapp revision list \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --query "[?contains(name, '$(revisionSuffix)')].name" -o tsv)

          echo "Routing 100% traffic to: $newRev"

          az containerapp ingress traffic set \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --revision-weight $newRev=100

- stage: Cleanup
  dependsOn: Route100Percent
  jobs:
  - job: CleanupOldRevisions
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSub)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Fetching current active revision with traffic..."

          activeRev=$(az containerapp show \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --query "properties.configuration.ingress.traffic[?weight > \`0\`].revisionName" -o tsv)

          echo "Active revision: $activeRev"

          allRevs=$(az containerapp revision list \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --query "[].name" -o tsv)

          for rev in $allRevs; do
            if [ "$rev" != "$activeRev" ]; then
              echo "Deactivating revision: $rev"
              az containerapp revision deactivate \
                --name $(containerAppName) \
                --resource-group $(resourceGroup) \
                --revision $rev
            else
              echo "Keeping active revision: $rev"
            fi
          done
