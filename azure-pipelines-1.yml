name: enterprise-builder-pipeline

variables:
  ACR_NAME: $(var-acrName)
  ACR_LOGIN_SERVER: $(var-acrLoginServer)
  AZURE_SERVICE_CONNECTION: 'RG-Devansh-POC-0041'
  BUILDER_NAME: paketo-enterprise-builder
  BUILDER_IMAGE: $(ACR_LOGIN_SERVER)/$(BUILDER_NAME):latest

pool:
  vmImage: ubuntu-latest

stages:
- stage: BuildAndPushBuilder
  displayName: 'Build and Push Custom Builder'
  jobs:
  - job: Builder
    displayName: 'Build and Push Builder Job'
    steps:
    - checkout: self

    - script: |
        echo "Installing pack CLI..."
        curl -sSL -o pack.tgz https://github.com/buildpacks/pack/releases/download/v0.32.0/pack-v0.32.0-linux.tgz
        tar -xzf pack.tgz
        sudo mv pack /usr/local/bin/
      displayName: 'Install Pack CLI'

    - script: |
        echo "Creating builder using enterprise-builder.toml..."
        pack builder create $BUILDER_NAME --config enterprise-builder.toml
        docker tag $BUILDER_NAME $BUILDER_IMAGE
      displayName: 'Create and Tag Builder Image'

    - task: Docker@0
      displayName: 'Push Builder Image to ACR'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'acadevportal'
        azureContainerRegistry: '{"loginServer":"agfwebaca1devtestcacacr-fwdqgcbeb0ghbwa5.azurecr.io", "id" : "/subscriptions/f77881c9-21ce-45db-ab80-f0691c3abab9/resourceGroups/agfweb_aca1_devtest_cac-rg/providers/Microsoft.ContainerRegistry/registries/agfwebaca1devtestcacacr"}'
        action: 'Push an image'
        imageName: '$(ACR_LOGIN_SERVER)/$(BUILDER_NAME)'
        includeLatestTag: true

- stage: CheckingBuilderImage
  displayName: 'Check Builder Image Exists in ACR'
  dependsOn: BuildAndPushBuilder
  jobs:
  - job: CheckImage
    displayName: 'Verify Builder Image'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureCLI@2
      displayName: 'Login to ACR'
      inputs:
        azureSubscription: $(AZURE_SERVICE_CONNECTION)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name $ACR_NAME

    - script: |
        echo "Checking if image exists: $BUILDER_IMAGE"
        docker pull $BUILDER_IMAGE
        docker inspect $BUILDER_IMAGE
      displayName: 'Pull and Inspect Image'
